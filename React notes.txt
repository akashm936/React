30/11/2024

1) this package are neccery for running the react application


*** learn
AJAX  (Asyncronous javascript )
RollUp
package bundler


example of package

1) babel
2) ESLint
3) rollup
3) vitejs
4) react
5) React-DOM


#|  public
-> it is used for storingthe static assest lie images and svg
-> public folder is same like a assest folder 
-> we will not used public folder for storig the static assest insed    of that we used assest for in src


#| eslint.config.js

-> ESLint is will  gives you a syntax error while writing the javascript code.

#|  index.html

-> in react installation we will get one html file
-> in that html file thier is two important tag 
-> will not write any html code in that html file

<div id="root"></div>
<script type="module" src="/main.js"></script>

#| package.lock.json
in this file we have all the package and library informstion in jason format

#| package.json
in this file we have all the package and library informstion in jason format




readme: 
-> in this file we will write a all the information of about the project
-> or some instruction for thr team.


version: 1:0:0
major:minor:batch

Dependecies: 
-> this are mejor Dependecies  that are impotart in developement phase and also production phase.

ex 
1) react
2) react-DOM



DevDependecies : are those librery and packages that are neccerary during developement only and are not required after deployment


ex
@ESlint
@vite

---------------------------------------------------------------------------------------------------------------------------------------
02-12-2024
---------------------------------------------------------

*) deffing algorithm

1) what is deffing algorithm
-> diffing algorithm is the process of finding the difference/changes between real dom and virtual dom.

2) reconcilation process
-> reconcilation is the process of implementing the changes from virtual dom to real dom
   that are found during the deffing algorithm.

3) React fiber
->  React fiber is the react Engine 

4) whta is babel 
-> babel is transfilers it will convert the modern javascript code into browser understadable/ normal javascript.
-> this process is code is transfilation.
-> and transfilation is done by babel. 
-> transfilation is occur during the rendering.
-> modern javascript means JSX code.  

5) what is JSX
-> javascript and xml 
-> jsx is html look like javascript code. 

6) Strict modern
-> strict mode check the syntax 2 times and run times.

7) components
-> components is reuseble block of code.


---------------------------------------------------------------------------------------------------------------------------------------
03-12-2024
---------------------------------------------------------

MVC architechture
model view controler


* ) Angular
-> made in 2009
-> made by google
-> it is framework
-> it follow mvc architechture
-> it support javascript / typescript


* ) React
-> made in 2011
-> made public in 2013
-> made by Facebook (jordan walke)
-> it is library
-> it follow components base architechture
-> it support javascript / typescript


* ) Angular 2
-> made in 2014-15
-> made by google
-> it is framework
-> it follow components base architechture
-> it support only typescript


* ) Vue.js
-> made in 2015-16
-> made by Evan you
-> it is framework
-> it follow components base architechture
-> it support javascript / typescript



*) Npm

npm toast

2.1 million package are in npm library
its world largest packages registru



---------------------------------------------------------------------------------------------------------------------------------------
06-12-2024
---------------------------------------------------------

npm: node package manager
npm will compalsary dawnload all the packages and librery to your System means we are dawnload the packages then only we can use them.

*) npx : - node package executor

-> npx will dawnload only neccesary packages and remainning packages we can access without dawnloading them.

if we want to used Facebook two way 
1) dawnloading the Facebook appl with similar to npm way means we dawnloading it then we used it.

2) dawnloading the browser (neccerary package) here in this ex we are not dawnloading the facebook but instead we are dawnloading the neccerary package and executing/ using facebook on that package.
 

 -----------------------------
npx create app folder structure

- node module
-public
  -
  -
-src
-gitingnore
- package.lock.json
-package.json

command for create react app using npx

*)  npm create react-app project_name
                         
                         
we are not write import export in inside the components
we write import at the top of code and
we write export as bottom of code



rules of jsx

1) compalsary return jsx
2) return only one element
3) tag should be closed
4) we can't used attribute 'for', 'class' instead  we use 'htmlFor','className'
5) we dont want to create un neccerary node we used Fragment
  
  type of Fragment;
  
  *) empty Fragment <> </>
  *) name Fragment <Fragment> <Fragment/>
  *) default Fragment <React.Fragment> <React.Fragment/>

  -> with empty fragment we can not use key
     if we want to use key we use <Fragment key={keyname}> or <React.Fragment key={keyname}>

   =) Jsx Expression Rule / Convation

      *) we should not write console statement inside the jsx syntax
      *) in jsx Expression we can not write any conditional statement except ternary operator and short cerkit operator
  
6) 

//10-12-24

*) hot module replacement :-
-> Hot module replacement (HMR) is one of the most useful features offered by package bundler .
->  it allows all kind of module to be updated at runtime without the need for a full refresh

HMR is not intended for use in production, meaning it should only be used in developement


*) hooks 
what is hooks
-> hooks are nothing but the in build method or funtions 
-> hooks name start with use.
-> ex . useState(), useEffect() , useContext(), useDispatch, useReducer, useCallBack, useMemo
-> we can create any function and we will name it  useXYS. such function can be treated as custome hooks 
ex: let useAddition = (a,b) =>{
return a +b

let sum = useAddition(10,20)
log(sum)



// feature/ characterStrict of react 

1) it follow the component based architechture
2) React is declarative in nature. //ex we dont need write any dom method becouse everything allready declared with jsx
we can called as declarative becouse react provides many inbuild hooks for diffrent functionality we just have to used them.

-> Declarative means every thing is declare we just have to used it ex you dont need any instruction you allredy know to do it 
-> imparative means many of thing are not allredy declared we have to explictly or manualy explain them : ex : if you dont know how to do it we just want to instruction to do it.

3) Write once use anywhere. we can create a components for such functionality that are repitative and we can used it n number of times 
-> ex we will create the button components onces and we will used it whereever we want n number of times.  